# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/ruby:2.4.4-node-browsers
        environment:
          RAILS_ENV: test
          BUNDLE_PATH: vendor/bundle
          PGUSER: root
          PGHOST: 127.0.0.1
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:10.4
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: findmyflock_test

orbs:
    hello: circleci/hello-build@0.0.5
    slack: circleci/slack@0.1.10

workflows:
    "Hello Workflow":
        jobs:
          - hello/hello-build

jobs:
  myjob:
    docker:
      - image: "circleci/node:9.6.1"
    steps:
      - slack/sayhi:
          webhook: "https://hooks.slack.com/services/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"
          message: "This is a test"
      - myorb/sayhello:
          to: "Lev"

  build:
    executor: docker-executor

    working_directory: ~/findmyflock/www

    steps:

      - checkout

      # Download and cache Ruby dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: install dependencies
          command: |
            bundle check || bundle install

      - save_cache:
          paths:
            - vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Download and cache JS dependencies
      - restore_cache:
          keys:
          - v1-yarn-dependencies-{{ checksum "package.json" }}

      - run:
          name: install dependencies
          command: |
            yarn install --ignore-engines

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: v1-yarn-dependencies-{{ checksum "package.json" }}

      # Database setup
      - run:
          command: bundle exec rake db:create db:schema:load

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Run tests
          command: |
            if [ -n "${CC_TEST_REPORTER_ID}" ]; then
              ./cc-test-reporter before-build
            fi
            bundle exec rspec
            if [ -n "${CC_TEST_REPORTER_ID}" ]; then
              ./cc-test-reporter after-build
            fi
